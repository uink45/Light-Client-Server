import { BitListType, BitVectorType, ContainerLeafNodeStructType, ContainerType, List, ListType, Vector, VectorType } from "@chainsafe/ssz";
import * as phase0 from "./types";
export declare const AttestationSubnets: BitVectorType;
export declare const BeaconBlockHeader: ContainerType<phase0.BeaconBlockHeader>;
export declare const SignedBeaconBlockHeader: ContainerType<phase0.SignedBeaconBlockHeader>;
export declare const Checkpoint: ContainerType<phase0.Checkpoint>;
export declare const CommitteeBits: BitListType;
export declare const CommitteeIndices: ListType<List<number>>;
export declare const DepositMessage: ContainerType<phase0.DepositMessage>;
export declare const DepositData: ContainerType<phase0.DepositData>;
export declare const DepositDataRootList: ListType<List<import("@chainsafe/ssz").ByteVector>>;
export declare const DepositEvent: ContainerType<phase0.DepositEvent>;
export declare const Eth1Data: ContainerType<phase0.Eth1Data>;
export declare const Eth1DataVotes: ListType<List<any>>;
export declare const Eth1DataOrdered: ContainerType<phase0.Eth1DataOrdered>;
export declare const Fork: ContainerType<phase0.Fork>;
export declare const ForkData: ContainerType<phase0.ForkData>;
export declare const ENRForkID: ContainerType<phase0.ENRForkID>;
export declare const HistoricalBlockRoots: VectorType<Vector<import("@chainsafe/ssz").ByteVector>>;
export declare const HistoricalStateRoots: VectorType<Vector<import("@chainsafe/ssz").ByteVector>>;
export declare const HistoricalBatch: ContainerType<phase0.HistoricalBatch>;
export declare const Validator: ContainerLeafNodeStructType<phase0.Validator>;
export declare const Validators: ListType<List<any>>;
export declare const Balances: ListType<List<any>>;
export declare const RandaoMixes: VectorType<Vector<any>>;
export declare const Slashings: VectorType<Vector<any>>;
export declare const JustificationBits: BitVectorType;
export declare const AttestationData: ContainerType<phase0.AttestationData>;
export declare const IndexedAttestation: ContainerType<phase0.IndexedAttestation>;
export declare const PendingAttestation: ContainerType<phase0.PendingAttestation>;
export declare const SigningData: ContainerType<phase0.SigningData>;
export declare const Attestation: ContainerType<phase0.Attestation>;
export declare const AttesterSlashing: ContainerType<phase0.AttesterSlashing>;
export declare const Deposit: ContainerType<phase0.Deposit>;
export declare const ProposerSlashing: ContainerType<phase0.ProposerSlashing>;
export declare const VoluntaryExit: ContainerType<phase0.VoluntaryExit>;
export declare const SignedVoluntaryExit: ContainerType<phase0.SignedVoluntaryExit>;
export declare const BeaconBlockBody: ContainerType<phase0.BeaconBlockBody>;
export declare const BeaconBlock: ContainerType<phase0.BeaconBlock>;
export declare const SignedBeaconBlock: ContainerType<phase0.SignedBeaconBlock>;
export declare const EpochAttestations: ListType<List<phase0.PendingAttestation>>;
export declare const BeaconState: ContainerType<phase0.BeaconState>;
export declare const CommitteeAssignment: ContainerType<phase0.CommitteeAssignment>;
export declare const AggregateAndProof: ContainerType<phase0.AggregateAndProof>;
export declare const SignedAggregateAndProof: ContainerType<phase0.SignedAggregateAndProof>;
export declare const Status: ContainerType<phase0.Status>;
export declare const Goodbye: import("@chainsafe/ssz").BigIntUintType;
export declare const Ping: import("@chainsafe/ssz").BigIntUintType;
export declare const Metadata: ContainerType<phase0.Metadata>;
export declare const BeaconBlocksByRangeRequest: ContainerType<phase0.BeaconBlocksByRangeRequest>;
export declare const BeaconBlocksByRootRequest: ListType<List<any>>;
export declare const Genesis: ContainerType<phase0.Genesis>;
//# sourceMappingURL=sszTypes.d.ts.map